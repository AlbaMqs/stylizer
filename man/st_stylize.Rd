% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/st_stylize.R
\name{st_stylize}
\alias{st_stylize}
\title{Stylize a Flextable for Improved Readability and Structure}
\usage{
st_stylize(
  data,
  theme = "classy",
  group = NULL,
  lang = Sys.getlocale("LC_CTYPE")
)
}
\arguments{
\item{data}{A table or dataframe to be formatted.}

\item{theme}{The flextable theme to apply. Default is \code{"classy"}.}

\item{group}{Grouping level indicator. Leave \code{NULL} for single-level grouping; set to \code{2} for multi-level.}

\item{lang}{Language for table content and footnotes. Accepts \code{"en"} for English or \code{"fr"} for French.}
}
\value{
A stylized flextable object, ready for printing or exporting to Word.
}
\description{
Formats and enhances the layout of a flextable by structuring content, formatting cells, and adding footnotes
as needed for optimal readability. This function can handle missing data, non-additive categories, and other
specific notes in multiple languages.
}
\examples{
# Example of using the st_stylize function

# Example 1: Applying st_stylize to a contingency table
tab_contingency_binded(warpbreaks, wool, breaks, y = tension, p_group = c(2, 1), na.use = "as.note") |>
st_stylize()

# Example 2: Applying st_stylize with a custom note and grouped p-values
warpbreaks |>
dplyr::rename(`wool<note:A simple note>` = wool) |>
tab_contingency_yn_binded(breaks, `wool<note:A simple note>`, y = tension, p_group = c(2,1),
                          title = "Combined Wool and Tension Table", pos.value = "A") |>
st_stylize(lang = "fr")
}
